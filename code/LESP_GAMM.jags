
model {
  
  # --------------------------------
  # Colony-level intercepts (note that GAM structure includes intercept for colony 1)
  # --------------------------------
  
  C[1] <- 0
  for(k in 2:ncolony){
    C[k] ~ dnorm(0,0.01) 
  }
  
  # --------------------------------
  # GAMM smooth
  # --------------------------------
  
  # Describes the variance among colonies in the shapes of their GAMs
 
  sdbeta ~ dunif(0,5) # Prediction (if we understand the model): puffins should have higher sdbeta than petrels
  taubeta <- pow(sdbeta,-2) 
  
  nk1 <- nknots-1
  nk2 <- ((nknots*2)-2)
  B.X[1] ~ dnorm(0,0.01)
  
  ## prior for s(year)... 
  K1 <- S1[1:nk1,1:nk1] * lambda[1]  + S1[1:nk1,(nknots:nk2)] * lambda[2]
  B.X[(2:nknots)] ~ dmnorm(zero[(2:nknots)],K1) 
  
  #K1 is the prior on the precisions of the mnorm B.X values (mean GAM parameters for a species)
  ## smoothing parameter
  
  for(i in 1:2) {
    lambda[i] ~ dgamma(0.05,0.005) # Prediction: could control wiggliness by changing this prior
    rho[i] <- log(lambda[i])
  } # i
  
  for(j in 1:nknots){ # Computation of GAM components
    
    for(k in 1:ncolony){
      
      # Draw betas for each colony (for this knot) from a shared distribution
      beta.X[k,j] ~ dnorm(B.X[j],taubeta) 
      
      for ( i in 1:nyearspred ){
        
        X.part[i,j,k] <- beta.X[k,j]*(X[i,j])
        
      } # i
    } # k
  } # j
  
  # --------------------------------
  # Colony-level dynamics
  # --------------------------------
  
  # Annual process variation
  noise_sd <- 0.2
  noise_tau <- pow(noise_sd,-2)
  
  for (i in 1:nyearspred){
    for(k in 1:ncolony){
      
      yeareffect[i,k] <- sum(X.part[i,1:nknots,k])
      log_mu[i,k] ~ dnorm(C[k] + yeareffect[i,k],noise_tau)

    } # k
  } # i

  # --------------------------------
  # Observation process
  # --------------------------------
  
  # priors on CV parameters
  intercept_CV ~ dnorm(0,0.1)
  slope_CV ~ dnorm(0,0.1)
  sd_CV ~ dunif(0,3)
  tau_CV <- pow(sd_CV,-2)
  
  for (i in 1:ncounts) { 
    
    # Filling in missing observation error for certain surveys
    logCV[i] ~ dnorm(intercept_CV + slope_CV * log(count2[i]),tau_CV)
    survey_sd[i]  <- exp(logCV[i]) * count2[i]
    survey_tau[i] <- pow(survey_sd[i],-2)
    
    lambda_count[i] ~ dnorm(exp(log_mu[year[i],colony[i]]), survey_tau[i])    
    count[i] ~ dpois(lambda_count[i])                     
  }
  
  # --------------------------------
  # Derived parameters: predictions of annual expected counts
  # --------------------------------
  
  for (i in 1:nyearspred){
    for(k in 1:ncolony){
      population_index[i,k] <- exp(C[k] + yeareffect[i,k] + 0.5*pow(noise_sd,2))
    }
  } #i
  
}

